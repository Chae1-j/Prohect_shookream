<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mapper 태그 내에 namespace 속성 지정 후 Mapper 인터페이스 위치 지정 -->
<mapper namespace="com.itwillbs.shookream.mapper.CartMapper">
  <!--장바구니 목록 -->
	<select id="getCartlist" resultType="com.itwillbs.shookream.vo.cartVo">
	SELECT * 
		FROM cartlist_view	
			 WHERE member_idx=#{member_idx} AND cart_order_price > 0
			 	LIMIT #{startRow},#{listLimit}
	</select>
	<!--장바구니 추가 전 product_idx 에 맞는 상품 정보 가져오기(image 테이블과 조인한 product_view 조회) -->
	<select id="getProduct" resultType="com.itwillbs.shookream.vo.ProductVo">
	SELECT *
		FROM product_view
			WHERE product_idx = #{product_idx}
	
	</select>
	<!-- 추가 전 cart 테이블에 있는 지 확인 -->
	<select id="getCartSelect" resultType="com.itwillbs.shookream.vo.cartVo">
		SELECT *
			FROM cart
				WHERE product_idx = #{product_idx} AND member_idx = #{member_idx}
	</select>
	<!-- 이미 담긴 상품이 있는 경우 cart_count 만큼의 수량을 증가 -->
	<update id="getUpdateCart" >
		UPDATE cart
			SET cart_count = cart_count + #{cart_count}
				WHERE product_idx = #{product_idx} AND member_idx = #{member_idx}
	</update>
	<!-- 상세페이지에서 장바구니 추가 -->
	<insert id="getInsertCart">
		<selectKey keyProperty="cart_idx" order="BEFORE" resultType="int">
			SELECT MAX(cart_idx) FROM cart
		</selectKey>
		
		INSERT INTO cart
			VALUES(
			#{cart_idx} + 1,
			#{member_idx},
			#{product_idx},
			now(),
			(#{product.product_price} * #{cart_count}),
			#{product.product_discount_price},
			(#{product.product_release_price} * #{cart_count}),
			#{cart_count},
			#{product.product_size},
			#{product.product_color},
			#{product.product_name},
			#{product.image_main_file}
			);
	</insert>
	<!-- 장바구니 삭제  -->
	<delete id="getCartDelete">
		DELETE FROM cart 
			WHERE cart_idx=#{cart_idx } AND member_idx=#{member_idx}
	</delete>
	
</mapper>














